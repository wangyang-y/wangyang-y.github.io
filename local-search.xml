<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>项目一实战思路</title>
    <link href="/2020/05/31/%E9%A1%B9%E7%9B%AE%E4%B8%80%E5%AE%9E%E6%88%98%E6%80%9D%E8%B7%AF/"/>
    <url>/2020/05/31/%E9%A1%B9%E7%9B%AE%E4%B8%80%E5%AE%9E%E6%88%98%E6%80%9D%E8%B7%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="项目一实战总结"><a href="#项目一实战总结" class="headerlink" title="项目一实战总结"></a>项目一实战总结</h1><h2 id="会员统计"><a href="#会员统计" class="headerlink" title="会员统计"></a>会员统计</h2><p>设计年龄段，0-6岁为婴儿，7-12岁为少儿，13-17岁为青少年，18-45岁为青年、46-69岁为中年、&gt;69岁为老年，为达到一目了然各个年龄段的人数高低，选择柱状图展示。</p><blockquote><p><strong>心得</strong></p><p>使用ECharts很容易达到效果，使用时我们不需要关系样式怎么设置，直接去<a href="https://echarts.apache.org/examples/zh/index.html" target="_blank" rel="noopener">ECharts官网</a>找到合适的案例，粘贴到页面上即可。重要的是根据案例中的数据，构造出合适的数据模型动态的赋值。</p></blockquote><h4 id="前端调用实现"><a href="#前端调用实现" class="headerlink" title="前端调用实现"></a>前端调用实现</h4><pre><code class="hljs javascript"><span class="hljs-comment">// 基于准备好的dom，初始化echarts实例</span>        <span class="hljs-keyword">var</span> myChart1 = echarts.init(<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">'chart1'</span>));        axios.get(<span class="hljs-string">"/report/getMemberAgeReport.do"</span>).then(<span class="hljs-function">(<span class="hljs-params">res</span>)=&gt;</span>&#123;            <span class="hljs-comment">// 指定图表的配置项和数据</span>            myChart1.setOption(                &#123;                    title: &#123;                        text: <span class="hljs-string">'会员年龄分布统计'</span>                    &#125;,                    tooltip: &#123;&#125;,                    legend: &#123;                        data:[<span class="hljs-string">'年龄段人数'</span>]                    &#125;,                    xAxis: &#123;                        data: res.data.data.ageStages                    &#125;,                    yAxis: &#123;&#125;,                    series: [&#123;                        name: <span class="hljs-string">'年龄段人数'</span>,                        type: <span class="hljs-string">'bar'</span>,                        data: res.data.data.ageCountNum                    &#125;]                &#125;                );        &#125;);</code></pre><h4 id="后台逻辑"><a href="#后台逻辑" class="headerlink" title="后台逻辑"></a>后台逻辑</h4><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping</span>(<span class="hljs-string">"/getMemberAgeReport"</span>)    <span class="hljs-function"><span class="hljs-keyword">public</span> Result <span class="hljs-title">getMemberAgeReport</span><span class="hljs-params">()</span> </span>&#123;        List&lt;Map&lt;String,Object&gt;&gt; ageStagesMapList = memberService.findMemberCountByBirthdy();        Map&lt;String, Object&gt; data = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();        List&lt;String&gt; ageStages = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();               <span class="hljs-comment">//纵坐标数据,统计每个年龄段的人数</span>        List&lt;Long&gt; ageCountNum = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();        <span class="hljs-keyword">if</span>(ageStagesMapList != <span class="hljs-keyword">null</span>)&#123;            <span class="hljs-keyword">for</span> (Map&lt;String, Object&gt; stringObjectMap : ageStagesMapList) &#123;                <span class="hljs-comment">//拿到map集合&#123;name=青少年, num=12&#125;</span>                String str = (String) stringObjectMap.get(<span class="hljs-string">"name"</span>);                <span class="hljs-comment">//年龄段表示字段 x</span>                ageStages.add(str);                Long value = (Long) stringObjectMap.get(<span class="hljs-string">"num"</span>);                <span class="hljs-comment">//年龄段的值 y</span>                ageCountNum.add(value);            &#125;            <span class="hljs-comment">//将横纵坐标的list 接入map 集合</span>            data.put(<span class="hljs-string">"ageStages"</span>, ageStages);            data.put(<span class="hljs-string">"ageCountNum"</span>,ageCountNum);            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Result(<span class="hljs-keyword">true</span>, <span class="hljs-string">"查询成功"</span>, data);        &#125;        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Result(<span class="hljs-keyword">false</span>, <span class="hljs-string">"查询失败"</span>);    &#125;</code></pre><pre><code>#### SQL</code></pre><pre><code class="hljs mysql">&lt;select id&#x3D;&quot;findMemberCountByBirthdy&quot; resultType&#x3D;&quot;map&quot;&gt;        SELECT t.name,COUNT(1) as num FROM (SELECT  CASE        WHEN  ROUND(DATEDIFF(CURDATE(), birthday)&#x2F;365.2422)&gt; 0 AND ROUND(DATEDIFF(CURDATE(), birthday)&#x2F;365.2422)&lt;  6  THEN &#39;婴幼儿&#39;        WHEN  ROUND(DATEDIFF(CURDATE(), birthday)&#x2F;365.2422)&gt;&#x3D;7 AND ROUND(DATEDIFF(CURDATE(), birthday)&#x2F;365.2422)&lt;   12  THEN &#39;少儿&#39;        WHEN  ROUND(DATEDIFF(CURDATE(), birthday)&#x2F;365.2422)&gt;&#x3D;13 AND ROUND(DATEDIFF(CURDATE(), birthday)&#x2F;365.2422)&lt;   17  THEN &#39;青少年&#39;        WHEN  ROUND(DATEDIFF(CURDATE(), birthday)&#x2F;365.2422)&gt;&#x3D;18 AND ROUND(DATEDIFF(CURDATE(), birthday)&#x2F;365.2422)&lt;   45  THEN &#39;青年&#39;        WHEN  ROUND(DATEDIFF(CURDATE(), birthday)&#x2F;365.2422)&gt;&#x3D;46 AND ROUND(DATEDIFF(CURDATE(), birthday)&#x2F;365.2422)&lt;   69  THEN &#39;中年&#39;        WHEN  ROUND(DATEDIFF(CURDATE(), birthday)&#x2F;365.2422)&gt;&#x3D;79 AND ROUND(DATEDIFF(CURDATE(), birthday)&#x2F;365.2422)&lt;   89  THEN &#39;老年&#39;        WHEN  ROUND(DATEDIFF(CURDATE(), birthday)&#x2F;365.2422)&gt;&#x3D;90 THEN &#39;90以上&#39;        ELSE &#39;未知&#39; END as name FROM t_member) as t GROUP BY t.name;    &lt;&#x2F;select&gt;</code></pre><blockquote><p><img src="http://www.qfeng.online/imgs/test-02.PNG" srcset="/img/loading.gif" alt=""><strong>SQL分析</strong></p><p>年龄采取四舍五入的方式，如出生日期2018-08-02，如果今天是2018-09-01差一天满，将处理为1岁显示。</p><p>如果不需要四舍五入则使用： <code>TIMESTAMPDIFF(YEAR, @birthday, CURDATE())</code></p><p>round():     函数 用于四舍五入。</p><p>DATEDIFF()：返回两个日期之间的天数。</p><p>CURDATE() 函数返回当前的日期。</p><p>注意大于号和小于号在mybatis 中转义，不转义会和标签的 &lt;&gt;混淆。</p></blockquote><blockquote><p>​    需要分析的sql</p><p>统计会员年龄分布sql ： findMemberCountByBirthdy</p></blockquote><p><a href="http://www.qfeng.online/imgs/test-02.PNG" target="_blank" rel="noopener">http://www.qfeng.online/imgs/test-02.PNG</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/05/29/hello-world/"/>
    <url>/2020/05/29/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
